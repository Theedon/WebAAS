generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  // directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id          String   @id @default(cuid())
  first_name  String   @db.VarChar(64)
  middle_name String?  @db.VarChar(128)
  last_name   String   @db.VarChar(128)
  password    String
  email       String   @unique @db.VarChar(128)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  role        Role     @default(student)
  verified    Boolean  @default(false)
  onboarded   Boolean  @default(false)
  faculty_id  String
  clerk_id    String?  @unique
  phone_no    String?

  faculty    Faculty     @relation(fields: [faculty_id], references: [id])
  UserToExam UserToExam?
  Event      Event[]

  @@map("users")
}

enum Role {
  admin
  advisor
  student
}

model UserToExam {
  id                String   @id @default(cuid())
  clerk_id          String   @unique
  test_information  Bytes?
  ai_recommendation Bytes?
  rec_course_1      String?
  rec_course_2      String?
  rec_course_3      String?
  anti_course_1     String?
  anti_course_2     String?
  anti_course_3     String?
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  taken_exam        Boolean  @default(false)

  user User @relation(fields: [clerk_id], references: [clerk_id])

  @@map("user_to_exam")
}

model Faculty {
  id         String    @id @default(cuid())
  name       String
  code       String    @unique
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  subjects   Subject[]
  users      User[]

  @@map("faculties")
}

model Subject {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique
  description String?
  faculty     Faculty  @relation(fields: [faculty_id], references: [id])
  faculty_id  String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  questions Question[]

  @@map("subjects")
}

model Question {
  id             String   @id @default(cuid())
  subject        Subject  @relation(fields: [subject_id], references: [id])
  subject_id     String
  question_text  String
  option_a       String
  option_b       String
  option_c       String
  option_d       String
  correct_option String
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  @@index(fields: [question_text])
  @@map("questions")
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  sender_id   String
  expired     Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  advisor User @relation(fields: [sender_id], references: [clerk_id])

  @@map("events")
}
